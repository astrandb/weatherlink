# serializer version: 1
# name: test_sensor[sensor.strp81_dewpoint-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_dewpoint',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Dewpoint',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'dewpoint',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-Dewpoint',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensor[sensor.strp81_dewpoint-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Strp81 Dewpoint',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_dewpoint',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_evapotranspiration_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_evapotranspiration_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRECIPITATION: 'precipitation'>,
    'original_icon': 'mdi:waves-arrow-up',
    'original_name': 'Evapotranspiration day',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'et_day',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-ETDay',
    'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
  })
# ---
# name: test_sensor[sensor.strp81_evapotranspiration_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'precipitation',
      'friendly_name': 'Strp81 Evapotranspiration day',
      'icon': 'mdi:waves-arrow-up',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_evapotranspiration_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_evapotranspiration_month-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_evapotranspiration_month',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRECIPITATION: 'precipitation'>,
    'original_icon': 'mdi:waves-arrow-up',
    'original_name': 'Evapotranspiration month',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'et_month',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-ETMonth',
    'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
  })
# ---
# name: test_sensor[sensor.strp81_evapotranspiration_month-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'precipitation',
      'friendly_name': 'Strp81 Evapotranspiration month',
      'icon': 'mdi:waves-arrow-up',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_evapotranspiration_month',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_evapotranspiration_year-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_evapotranspiration_year',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRECIPITATION: 'precipitation'>,
    'original_icon': 'mdi:waves-arrow-up',
    'original_name': 'Evapotranspiration year',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'et_year',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-ETYear',
    'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
  })
# ---
# name: test_sensor[sensor.strp81_evapotranspiration_year-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'precipitation',
      'friendly_name': 'Strp81 Evapotranspiration year',
      'icon': 'mdi:waves-arrow-up',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_evapotranspiration_year',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_heat_index-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_heat_index',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Heat index',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'heat_index',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-HeatIndex',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensor[sensor.strp81_heat_index-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Strp81 Heat index',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_heat_index',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_inside_humidity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_inside_humidity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.HUMIDITY: 'humidity'>,
    'original_icon': None,
    'original_name': 'Inside humidity',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'inside_humidity',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-InsideHumidity',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor[sensor.strp81_inside_humidity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'humidity',
      'friendly_name': 'Strp81 Inside humidity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_inside_humidity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_inside_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_inside_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Inside temperature',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'inside_temperature',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-InsideTemp',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensor[sensor.strp81_inside_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Strp81 Inside temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_inside_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_last_rain_storm-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_last_rain_storm',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRECIPITATION: 'precipitation'>,
    'original_icon': None,
    'original_name': 'Last rain storm',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'rain_storm_last',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-RainStormLast',
    'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
  })
# ---
# name: test_sensor[sensor.strp81_last_rain_storm-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'precipitation',
      'friendly_name': 'Strp81 Last rain storm',
      'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_last_rain_storm',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_last_updated-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.strp81_last_updated',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.TIMESTAMP: 'timestamp'>,
    'original_icon': None,
    'original_name': 'Last updated',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'last_update',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-LastUpdate',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor[sensor.strp81_last_updated-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'timestamp',
      'friendly_name': 'Strp81 Last updated',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_last_updated',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_outside_humidity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_outside_humidity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.HUMIDITY: 'humidity'>,
    'original_icon': None,
    'original_name': 'Outside humidity',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'outside_humidity',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-OutsideHumidity',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor[sensor.strp81_outside_humidity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'humidity',
      'friendly_name': 'Strp81 Outside humidity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_outside_humidity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_outside_temperature-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_outside_temperature',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Outside temperature',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'outside_temperature',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-OutsideTemp',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensor[sensor.strp81_outside_temperature-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Strp81 Outside temperature',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_outside_temperature',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_pressure-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_pressure',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfPressure.HPA: 'hPa'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRESSURE: 'pressure'>,
    'original_icon': None,
    'original_name': 'Pressure',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'pressure',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-Pressure',
    'unit_of_measurement': <UnitOfPressure.HPA: 'hPa'>,
  })
# ---
# name: test_sensor[sensor.strp81_pressure-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'pressure',
      'friendly_name': 'Strp81 Pressure',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPressure.HPA: 'hPa'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_pressure',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_pressure_trend-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_pressure_trend',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:trending-up',
    'original_name': 'Pressure trend',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'bar_trend',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-BarTrend',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor[sensor.strp81_pressure_trend-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Strp81 Pressure trend',
      'icon': 'mdi:trending-up',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_pressure_trend',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_rain_intensity-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_rain_intensity',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfVolumetricFlux.MILLIMETERS_PER_HOUR: 'mm/h'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRECIPITATION_INTENSITY: 'precipitation_intensity'>,
    'original_icon': None,
    'original_name': 'Rain intensity',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'rain_rate',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-RainRate',
    'unit_of_measurement': <UnitOfVolumetricFlux.MILLIMETERS_PER_HOUR: 'mm/h'>,
  })
# ---
# name: test_sensor[sensor.strp81_rain_intensity-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'precipitation_intensity',
      'friendly_name': 'Strp81 Rain intensity',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfVolumetricFlux.MILLIMETERS_PER_HOUR: 'mm/h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_rain_intensity',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_rain_storm-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_rain_storm',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRECIPITATION: 'precipitation'>,
    'original_icon': None,
    'original_name': 'Rain storm',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'rain_storm',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-RainStorm',
    'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
  })
# ---
# name: test_sensor[sensor.strp81_rain_storm-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'precipitation',
      'friendly_name': 'Strp81 Rain storm',
      'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_rain_storm',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_rain_this_month-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_rain_this_month',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRECIPITATION: 'precipitation'>,
    'original_icon': None,
    'original_name': 'Rain this month',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'rain_this_month',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-RainInMonth',
    'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
  })
# ---
# name: test_sensor[sensor.strp81_rain_this_month-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'precipitation',
      'friendly_name': 'Strp81 Rain this month',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_rain_this_month',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_rain_this_year-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_rain_this_year',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRECIPITATION: 'precipitation'>,
    'original_icon': None,
    'original_name': 'Rain this year',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'rain_this_year',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-RainInYear',
    'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
  })
# ---
# name: test_sensor[sensor.strp81_rain_this_year-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'precipitation',
      'friendly_name': 'Strp81 Rain this year',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_rain_this_year',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_rain_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_rain_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.PRECIPITATION: 'precipitation'>,
    'original_icon': None,
    'original_name': 'Rain today',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'rain_today',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-RainToday',
    'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
  })
# ---
# name: test_sensor[sensor.strp81_rain_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'precipitation',
      'friendly_name': 'Strp81 Rain today',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfLength.MILLIMETERS: 'mm'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_rain_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_solar_panel-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.strp81_solar_panel',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 3,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'Solar panel',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'solar_panel_volt',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-SolarPanelVolt',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_sensor[sensor.strp81_solar_panel-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'Strp81 Solar panel',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_solar_panel',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_supercapacitor-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.strp81_supercapacitor',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 3,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'Supercapacitor',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'supercap_volt',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-SupercapVolt',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_sensor[sensor.strp81_supercapacitor-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'Strp81 Supercapacitor',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_supercapacitor',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_thw_index-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_thw_index',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'THW index',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'thw_index',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-ThwIndex',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensor[sensor.strp81_thw_index-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Strp81 THW index',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_thw_index',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_transmitter_battery-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'sensor.strp81_transmitter_battery',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 3,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': None,
    'original_name': 'Transmitter battery',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'trans_battery_volt',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-TransBatteryVolt',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_sensor[sensor.strp81_transmitter_battery-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'Strp81 Transmitter battery',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_transmitter_battery',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_wet_bulb-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_wet_bulb',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Wet bulb',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wet_bulb',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-WetBulb',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensor[sensor.strp81_wet_bulb-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Strp81 Wet bulb',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_wet_bulb',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_wind-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_wind',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.WIND_SPEED: 'wind_speed'>,
    'original_icon': None,
    'original_name': 'Wind',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wind',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-Wind',
    'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
  })
# ---
# name: test_sensor[sensor.strp81_wind-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'wind_speed',
      'friendly_name': 'Strp81 Wind',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_wind',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_wind_chill-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_wind_chill',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': None,
    'original_name': 'Wind chill',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wind_chill',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-WindChill',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
  })
# ---
# name: test_sensor[sensor.strp81_wind_chill-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'Strp81 Wind chill',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '째C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_wind_chill',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_wind_direction-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_wind_direction',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:compass-outline',
    'original_name': 'Wind direction',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wind_direction',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-WindDir',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor[sensor.strp81_wind_direction-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Strp81 Wind direction',
      'icon': 'mdi:compass-outline',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_wind_direction',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_wind_direction_deg-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_wind_direction_deg',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:compass-outline',
    'original_name': 'Wind direction deg',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wind_direction_deg',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-WindDirDeg',
    'unit_of_measurement': '째',
  })
# ---
# name: test_sensor[sensor.strp81_wind_direction_deg-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Strp81 Wind direction deg',
      'icon': 'mdi:compass-outline',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': '째',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_wind_direction_deg',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_sensor[sensor.strp81_wind_gust-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.strp81_wind_gust',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
      'sensor.private': dict({
        'suggested_unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
      }),
    }),
    'original_device_class': <SensorDeviceClass.WIND_SPEED: 'wind_speed'>,
    'original_icon': None,
    'original_name': 'Wind gust',
    'platform': 'weatherlink',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'wind_gust',
    'unique_id': '03e7585a-4f29-4e7c-b6cb-d9e17313b07c-WindGust',
    'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
  })
# ---
# name: test_sensor[sensor.strp81_wind_gust-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'wind_speed',
      'friendly_name': 'Strp81 Wind gust',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfSpeed.KILOMETERS_PER_HOUR: 'km/h'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.strp81_wind_gust',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
